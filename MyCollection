
PGA HIST 
------------

col NAME for a40
col DATE_TIME for a20
prompt Enter Start and end time in DD-MON-YYYY HH24:MI format
select a.SNAP_ID,to_char(b.BEGIN_INTERVAL_TIME,'DD-MON-YYYY HH24:MI:SS') DATE_TIME,a.NAME,a.VALUE/1024/1024 MB
from DBA_HIST_PGASTAT a,DBA_HIST_SNAPSHOT b
where 
a.snap_id=b.snap_id and
to_char(b.BEGIN_INTERVAL_TIME,'DD-MON-YYYY HH24:MI') between '&START_TIME' and '&END_TIME' and 
a.name in
('total PGA inuse','total PGA allocated','maximum PGA allocated','aggregate PGA target parameter','bytes processed','PGA memory freed back to OS')
order by 1,3;

ASH Emergency Flush info
------------------------------

select TOTAL_SIZE/1024/1024 SIZEMB,SAMPLING_INTERVAL,SAMPLE_COUNT,SAMPLED_BYTES/1024/1024 SAM_MB,
SAMPLER_ELAPSED_TIME SAM_ET,AWR_FLUSH_BYTES/1024/1024 FLSH_MB,AWR_FLUSH_ELAPSED_TIME FLSH_ET,AWR_FLUSH_COUNT,AWR_FLUSH_EMERGENCY_COUNT EF_COUNT 
from v$ash_info;

DB Valid Parameters
-------------------------

col VALUE for a20
col NAME for a40
select * from V$PARAMETER_VALID_VALUES order by 2,3;

-- Check Obsolete parameters

select * from V$OBSOLETE_PARAMETER where ISSPECIFIED='TRUE';

Check Object and Linked Priv
---------------------------------

select * from V$OBJECT_PRIVILEGE order by 1;

Resource Plan
------------------

-- Check grante resource to Users:

SELECT * FROM dba_rsrc_consumer_group_privs;

-- Check all Resource Groups:

col COMMENTS for a100
SELECT plan,status,comments FROM dba_rsrc_plans;

-- Check Resourec Group CPU usage

SELECT name, CPU_METHOD,active_sessions, queue_length,
  consumed_cpu_time, cpu_waits, cpu_wait_time
  FROM v$rsrc_consumer_group;

select consumer_group, cpu_method, status,mandatory
 from dba_rsrc_consumer_groups;
 
 
select begin_time,
       consumer_group_name,
       cpu_consumed_time,
       cpu_wait_time
from   v$rsrcmgrmetric_history
order by begin_time; 

--- Current Active Plan

select id,NAME,IS_TOP_PLAN,CPU_MANAGED,INSTANCE_CAGING from v$rsrc_plan;

Wrap Code
-------------

-- Only wrap below codes:

CREATE [OR REPLACE] FUNCTION function_name
CREATE [OR REPLACE] PROCEDURE procedure_name
CREATE [OR REPLACE] PACKAGE package_name
CREATE [OR REPLACE] PACKAGE BODY package_name
CREATE [OR REPLACE] TYPE type_name ... OBJECT
CREATE [OR REPLACE] TYPE BODY type_name

wrap iname=input_file [oname=output_file]

wrap iname=db.sql

drop Procedure SAMPLE;

create Procedure SAMPLE is
begin
execute immediate 'select name from v$database';
end;
/

wrap iname=s1.sql

-- to unwrap , goto https://codecrete.net/UnwrapIt/ 
and past wrapped code.

Heavily Parsed SQL
----------------------

col sql_text for a120
select * from (SELECT SQL_TEXT, PARSE_CALLS, EXECUTIONS
FROM V$SQLAREA
ORDER BY PARSE_CALLS desc)
where rownum < 21;

High Buffer Gets SQL
----------------------

SELECT ADDRESS, HASH_VALUE, BUFFER_GETS, EXECUTIONS, 
BUFFER_GETS/EXECUTIONS "GETS/EXEC", SQL_TEXT
FROM V$SQLAREA 
WHERE BUFFER_GETS > 50000 
AND EXECUTIONS > 0
ORDER BY 3;

SELECT SQL_TEXT 
FROM V$SQLTEXT
WHERE 
ADDRESS='&ADDRESS_WANTED'
AND HASH_VALUe=&HASH_VALUE
ORDER BY piece;

High CPU Consuming SESSION_EVENT
-------------------------------------

-- CPU itilization is commulative , Hence it will be high for long running sessions
-- For better data , need to filter in between snapshots

SELECT v.SID, SUBSTR(s.NAME,1,30) "Statistic", v.VALUE
FROM V$STATNAME s, V$SESSTAT v
WHERE s.NAME = 'CPU used by this session'
AND v.STATISTIC# = s.STATISTIC#
AND v.VALUE > 0
ORDER BY 3;

Tune Buffer
----------------

select 
1+(select value from V$SYSSTAT where name='free buffer inspected')/(select value from V$SYSSTAT where name='free buffer requested') as "AVG_BUFF_SCAN" 
from dual;

On average, you would expect to see 1 or 2 buffers scanned. If more than this number are being scanned, then increase the size of the buffer cache or tune the DBWn process(es).

select 
(select value from V$SYSSTAT where name='dirty buffer inspected')/(select value from V$SYSSTAT where name='free buffer inspected') as "DIRTY_BUFFER" 
from dual;

If many dirty buffers exist, then possibly the DBWn process(es) cannot keep up. Again, increase the buffer cache size or tune the DBWn process.


select EVENT,TOTAL_WAITS,TOTAL_TIMEOUTS,TIME_WAITED,AVERAGE_WAIT,TIME_WAITED_MICRO,TOTAL_WAITS_FG,TOTAL_TIMEOUTS_FG,TIME_WAITED_FG,AVERAGE_WAIT_FG,TIME_WAITED_MICRO_FG,WAIT_CLASS
from V$SYSTEM_EVENT 
where WAIT_CLASS <> 'Idle'
order by 1;

select * from (select "WHERE",SLEEP_COUNT,count(*) from V$LATCH_MISSES group by "WHERE",SLEEP_COUNT order by 2 desc) where rownum < 11;

Library cache locks
--------------------------

[Solution] This feature provides system security, 
but also introduces bugs. 
The most powerful feature of Oracle is that almost all functions and features have corresponding switches, 
by setting EVENTS 28401, you can disable password delay verification and restart the database.

ALTER SYSTEM SET EVENT = '28401 TRACE NAME CONTEXT FOREVER, LEVEL 1' SCOPE = SPFILE;


################################################################################################################################################
Tablespace specific queries
################################################################################################################################################

Tablespace Details
-----------------------

COLUMN Tablespace format a25 heading 'Tablespace Name'
COLUMN autoextensible format a11 heading 'AutoExtend'
COLUMN files_in_tablespace format 999 heading 'Files'
COLUMN total_tablespace_space format 99999999 heading 'TotalSpace MB'
COLUMN total_used_space format 99999999 heading 'UsedSpace MB'
COLUMN total_tablespace_free_space format 99999999 heading 'FreeSpace MB'
COLUMN total_used_pct format 9999 heading '% Used'
COLUMN total_free_pct format 9999 heading '% Free'
COLUMN max_size_of_tablespace format 99999999 heading 'ExtendUpto'
COLUM total_auto_used_pct format 999.99 heading 'Max % Used'
COLUMN total_auto_free_pct format 999.99 heading 'Max % Free'
WITH tbs_auto AS
(SELECT DISTINCT tablespace_name, autoextensible
FROM dba_data_files
WHERE autoextensible = 'YES'),
files AS
(SELECT tablespace_name, COUNT (*) tbs_files,
SUM (BYTES/1024/1024) total_tbs_bytes
FROM dba_data_files
GROUP BY tablespace_name),
fragments AS
(SELECT tablespace_name, COUNT (*) tbs_fragments,
SUM (BYTES)/1024/1024 total_tbs_free_bytes,
MAX (BYTES)/1024/1024 max_free_chunk_bytes
FROM dba_free_space
GROUP BY tablespace_name),
AUTOEXTEND AS
(SELECT tablespace_name, SUM (size_to_grow) total_growth_tbs
FROM (SELECT tablespace_name, SUM (maxbytes)/1024/1024 size_to_grow
FROM dba_data_files
WHERE autoextensible = 'YES'
GROUP BY tablespace_name
UNION
SELECT tablespace_name, SUM (BYTES)/1024/1024 size_to_grow
FROM dba_data_files
WHERE autoextensible = 'NO'
GROUP BY tablespace_name)
GROUP BY tablespace_name)
SELECT c.instance_name,a.tablespace_name Tablespace,
CASE tbs_auto.autoextensible
WHEN 'YES'
THEN 'YES'
ELSE 'NO'
END AS autoextensible,
files.tbs_files files_in_tablespace,
files.total_tbs_bytes total_tablespace_space,
(files.total_tbs_bytes - fragments.total_tbs_free_bytes
) total_used_space,
fragments.total_tbs_free_bytes total_tablespace_free_space,
round(( ( (files.total_tbs_bytes - fragments.total_tbs_free_bytes)
/ files.total_tbs_bytes
)
* 100
)) total_used_pct,
round(((fragments.total_tbs_free_bytes / files.total_tbs_bytes) * 100
)) total_free_pct
FROM dba_tablespaces a,v$instance c , files, fragments, AUTOEXTEND, tbs_auto
WHERE a.tablespace_name = files.tablespace_name
AND a.tablespace_name = fragments.tablespace_name
AND a.tablespace_name = AUTOEXTEND.tablespace_name
AND a.tablespace_name = tbs_auto.tablespace_name(+)
order by total_free_pct;

Check TS datafile details
----------------------------------------------------------

col FILE_ID for 99999 head FILE#
col FILE_NAME for a60
col TABLESPACE_NAME for a20
set lines 200 pages 49999
select a.FILE_ID,to_char(b.CREATION_TIME,'DD-MON-YYYY HH24:MI') CREATION_TIME,a.FILE_NAME,b.BYTES/1024/1024 SIZE_MB,a.TABLESPACE_NAME,a.STATUS,b.status,a.AUTOEXTENSIBLE
from dba_data_files a,v$datafile_header b
where 
a.file_id=b.file# and
a.TABLESPACE_NAME='&TBS' order by 1;

################################################################################################################################################
Parent/Child Tables specific queries
################################################################################################################################################

Get Constraint of Table
-------------------------------------

col R_OWNER for a10
col INDEX_OWNER for a10 head I_OWNER
col INDEX_NAME for a12
col TABLE_NAME for a12
select TABLE_NAME,OWNER,CONSTRAINT_TYPE,R_OWNER,R_CONSTRAINT_NAME,DELETE_RULE,STATUS,DEFERRABLE,DEFERRED,VALIDATED,INDEX_OWNER,INDEX_NAME,INVALID 
from dba_constraints
where table_name='&TABLE'
order by owner;

Count of User Child Tables on Database
----------------------------------------

SELECT
      p.owner parent_owner,
      p.table_name Parent_table,
      count(*) as Child_tables
  FROM
      dba_constraints p, dba_constraints c
  where
  p.owner not in ('SYS','SYSTEM','SYSMAN','ORDDATA','OLAPSYS','MDSYS','EXFSYS','APEX_030200','CTXSYS','DBSNMP','FLOWS_FILES')
  and p.constraint_type IN ('P','U')
  and c.constraint_type='R'
  and p.owner=c.r_owner
  and p.constraint_name=c.r_constraint_name
group by p.owner,p.table_name
order by 1,3;

Check ALL Parent/Child Tables of Any schema
----------------------------------------------

SELECT
      p.owner parent_owner,
      c.owner child_owner,
      p.table_name Parent_table,
      p.constraint_name parent_cons_name,
      c.table_name Child_table,
      c.constraint_name child_cons_name
  FROM
      dba_constraints p, dba_constraints c
  where p.owner='&parent_Owner'
  and p.constraint_type IN ('P','U')
  and c.constraint_type='R'
  and p.owner=c.r_owner
  and p.constraint_name=c.r_constraint_name
order by 3;

Get Child Table details from Parent Table
------------------------------------------------

col COLUMN_NAME for a20
col TABLE_OWNER for a10 head T_OWNER
col CHILD_TABLE for a12
SELECT c.table_owner,a.table_name,c.column_name, b.table_name AS CHILD_TABLE, d.column_name, b.R_CONSTRAINT_NAME 
FROM dba_constraints a, dba_constraints b, dba_ind_columns c, dba_cons_columns d 
WHERE a.constraint_type = 'P' 
AND a.CONSTRAINT_NAME = b.R_CONSTRAINT_NAME 
AND b.CONSTRAINT_TYPE = 'R' 
AND a.table_name = c.table_name 
AND a.constraint_name = c.index_name 
AND b.CONSTRAINT_NAME = d.constraint_name 
AND a.table_name = '&ParentTable';

Check Best Details on Parent/Child Tables
------------------------------------------------

SET LINES 300 VERIFY OFF
col parent_owner format A13
col child_owner format A13
col parent_table format A25
col child_table format A15
col parent_cons_name format A25
col child_cons_name format A25
SELECT
      p.owner parent_owner,
      c.owner child_owner,
      p.table_name Parent_table,
      p.constraint_name parent_cons_name,
      c.table_name Child_table,
      c.constraint_name child_cons_name
  FROM
      dba_constraints p, dba_constraints c
  where p.owner='&parent_Owner'
  and p.table_name='&Parent_Table_Name'
  and p.constraint_type IN ('P','U')
  and c.constraint_type='R'
  and p.owner=c.r_owner
  and p.constraint_name=c.r_constraint_name
order by 4;


ALL Parent/Child tables in database
-------------------------------------------

SET LINES 300 VERIFY OFF
col parent_owner format A13
col child_owner format A13
col parent_table format A37
col child_table format A40
col parent_cons_name format A40
col child_cons_name format A40
SELECT
      p.owner parent_owner,
      c.owner child_owner,
      p.table_name Parent_table,
      p.constraint_name parent_cons_name,
      c.table_name Child_table,
      c.constraint_name child_cons_name
  FROM
      dba_constraints p, dba_constraints c
  where
  p.owner not in ('SYS','SYSTEM','SYSMAN','ORDDATA','OLAPSYS','MDSYS','EXFSYS','APEX_030200','CTXSYS','DBSNMP','FLOWS_FILES')
  and p.constraint_type IN ('P','U')
  and c.constraint_type='R'
  and p.owner=c.r_owner
  and p.constraint_name=c.r_constraint_name
order by 1,3;

###########################################################################################################################################
Misc
###########################################################################################################################################

ku$_table_data_view -> ku$_htable_data_view -> KU$_HTABLE_DATA_VIEW -> objid from tab$ -> dbms_metadata_util.block_estimate -> ku$_htable_bytes_alloc_view -> KU$_BYTES_ALLOC_VIEW -> KU$_STORAGE_VIEW -> seg$

###########################################################################################################################################
OS Related
###########################################################################################################################################
Linux Related
-------------------

/etc/init.d/network restart

Windows
--------------------------
Dumps:

C:\Windows\Minidump
