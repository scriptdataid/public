
PGA HIST 
------------

col NAME for a40
col DATE_TIME for a20
prompt Enter Start and end time in DD-MON-YYYY HH24:MI format
select a.SNAP_ID,to_char(b.BEGIN_INTERVAL_TIME,'DD-MON-YYYY HH24:MI:SS') DATE_TIME,a.NAME,a.VALUE/1024/1024 MB
from DBA_HIST_PGASTAT a,DBA_HIST_SNAPSHOT b
where 
a.snap_id=b.snap_id and
to_char(b.BEGIN_INTERVAL_TIME,'DD-MON-YYYY HH24:MI') between '&START_TIME' and '&END_TIME' and 
a.name in
('total PGA inuse','total PGA allocated','maximum PGA allocated','aggregate PGA target parameter','bytes processed','PGA memory freed back to OS')
order by 1,3;

Tablespace Details
-----------------------

COLUMN Tablespace format a25 heading 'Tablespace Name'
COLUMN autoextensible format a11 heading 'AutoExtend'
COLUMN files_in_tablespace format 999 heading 'Files'
COLUMN total_tablespace_space format 99999999 heading 'TotalSpace MB'
COLUMN total_used_space format 99999999 heading 'UsedSpace MB'
COLUMN total_tablespace_free_space format 99999999 heading 'FreeSpace MB'
COLUMN total_used_pct format 9999 heading '% Used'
COLUMN total_free_pct format 9999 heading '% Free'
COLUMN max_size_of_tablespace format 99999999 heading 'ExtendUpto'
COLUM total_auto_used_pct format 999.99 heading 'Max % Used'
COLUMN total_auto_free_pct format 999.99 heading 'Max % Free'
WITH tbs_auto AS
(SELECT DISTINCT tablespace_name, autoextensible
FROM dba_data_files
WHERE autoextensible = 'YES'),
files AS
(SELECT tablespace_name, COUNT (*) tbs_files,
SUM (BYTES/1024/1024) total_tbs_bytes
FROM dba_data_files
GROUP BY tablespace_name),
fragments AS
(SELECT tablespace_name, COUNT (*) tbs_fragments,
SUM (BYTES)/1024/1024 total_tbs_free_bytes,
MAX (BYTES)/1024/1024 max_free_chunk_bytes
FROM dba_free_space
GROUP BY tablespace_name),
AUTOEXTEND AS
(SELECT tablespace_name, SUM (size_to_grow) total_growth_tbs
FROM (SELECT tablespace_name, SUM (maxbytes)/1024/1024 size_to_grow
FROM dba_data_files
WHERE autoextensible = 'YES'
GROUP BY tablespace_name
UNION
SELECT tablespace_name, SUM (BYTES)/1024/1024 size_to_grow
FROM dba_data_files
WHERE autoextensible = 'NO'
GROUP BY tablespace_name)
GROUP BY tablespace_name)
SELECT c.instance_name,a.tablespace_name Tablespace,
CASE tbs_auto.autoextensible
WHEN 'YES'
THEN 'YES'
ELSE 'NO'
END AS autoextensible,
files.tbs_files files_in_tablespace,
files.total_tbs_bytes total_tablespace_space,
(files.total_tbs_bytes - fragments.total_tbs_free_bytes
) total_used_space,
fragments.total_tbs_free_bytes total_tablespace_free_space,
round(( ( (files.total_tbs_bytes - fragments.total_tbs_free_bytes)
/ files.total_tbs_bytes
)
* 100
)) total_used_pct,
round(((fragments.total_tbs_free_bytes / files.total_tbs_bytes) * 100
)) total_free_pct
FROM dba_tablespaces a,v$instance c , files, fragments, AUTOEXTEND, tbs_auto
WHERE a.tablespace_name = files.tablespace_name
AND a.tablespace_name = fragments.tablespace_name
AND a.tablespace_name = AUTOEXTEND.tablespace_name
AND a.tablespace_name = tbs_auto.tablespace_name(+)
order by total_free_pct;

Check TS datafile details
----------------------------------------------------------

col FILE_ID for 99999 head FILE#
col FILE_NAME for a60
col TABLESPACE_NAME for a20
set lines 200 pages 49999
select a.FILE_ID,to_char(b.CREATION_TIME,'DD-MON-YYYY HH24:MI') CREATION_TIME,a.FILE_NAME,b.BYTES/1024/1024 SIZE_MB,a.TABLESPACE_NAME,a.STATUS,b.status,a.AUTOEXTENSIBLE
from dba_data_files a,v$datafile_header b
where 
a.file_id=b.file# and
a.TABLESPACE_NAME='&TBS' order by 1;

