+########################################################
Scheduler OS Scripts in Oracle scheduler Jobs:
########################################################

Pre-Requisites:
--------------------

Check Permissions on Below oracle binaries:

SQL> !ls -ltr $ORACLE_HOME/rdbms/admin/ext* $ORACLE_HOME/bin/extj*
-rw-r-----. 1 root   oinstall    1534 Dec 22  2005 /u02/app/oracle/product/19.0.0/dbhome_1/rdbms/admin/externaljob.ora
-rwx------. 1 oracle oinstall 3015304 Jan  4  2023 /u02/app/oracle/product/19.0.0/dbhome_1/bin/extjobo	---> Update to 755
-rwsr-x---. 1 root   oinstall 3015304 Jan  4  2023 /u02/app/oracle/product/19.0.0/dbhome_1/bin/extjob

SQL> !chmod 755 $ORACLE_HOME/bin/extjobo

SQL> !ls -ltr $ORACLE_HOME/rdbms/admin/ext* $ORACLE_HOME/bin/extj*

Check ownership of external jobs:

cat $ORACLE_HOME/rdbms/admin/ext*

run_user = nobody
run_group = nobody

update to :

run_user = oracle
run_group = oinstall

Grant Privillege to User:

GRANT CREATE EXTERNAL JOB to AKM;

1. Create shell script as per your need. I am going to create basic expdp script:
-------------------------------------------------------------------------------------------------------------------------------------------

vi /home/oracle/expdp.sh

#!/usr/bin/ksh

export LOG1=/home/oracle
export LOG2=/u02/dpump

. /home/oracle/scripts/setEnv19c.sh

date > $LOG1/expdp_run.log
echo Starting >> $LOG1/expdp_run.log
expdp akm/akm directory=DATAPUMP dumpfile=expdp_akm.dmp logfile=expdp_akm.log schemas=AKM reuse_dumpfiles=y
cat $LOG2/expdp_akm.log >> $LOG1/expdp_run.log
echo done >> $LOG1/expdp_run.log
date >> $LOG1/expdp_run.log

chmod 755 /home/oracle/expdp.sh

2. Create Job in database:
-------------------------------------------------------------------------------------------------------------------------------------------

begin
 dbms_scheduler.create_job
(
job_name => 'AKM.EXPDP_JOB',
job_type => 'EXECUTABLE',
job_action => '/usr/bin/sh',
start_date => sysdate,
number_of_arguments => 1,
repeat_interval => 'FREQ=DAILY;BYHOUR=22;BYMINUTE=00',
enabled => false,
comments => 'DB EXPDP Backup'
);
end;
/

3. Set shell script as attribute and enable it:

exec dbms_scheduler.set_job_argument_value(job_name=>'AKM.EXPDP_JOB', argument_position=>1, argument_value=>'/home/oracle/expdp.sh') ;
exec dbms_scheduler.enable(name=>'AKM.EXPDP_JOB');

4. Test it manually
-------------------------------------------------------------------------------------------------------------------------------------------

exec dbms_scheduler.run_job('AKM.EXPDP_JOB');

5. Check logs
-------------------------------------------------------------------------------------------------------------------------------------------

!ls -ltr /home/oracle/expdp_run.log /u02/dpump/expdp_akm*

----------------------------------------------------------------------------------------------------
Some Errors which I had faced with solution:
----------------------------------------------------------------------------------------------------

1. Check Permissions of binaries if below error:

ERROR at line 1:
ORA-27370: job slave failed to launch a job of type EXECUTABLE
ORA-27300: OS system dependent operation:Waiting for extjob to send child failed with status: 62
ORA-27301: OS failure message: Timer expired
ORA-27302: failure occurred at: sjsec 6d
ORA-06512: at "SYS.DBMS_ISCHED", line 242
ORA-06512: at "SYS.DBMS_SCHEDULER", line 566
ORA-06512: at line 1

2. Check profile of user , add profile execution in begining part of shell if below error:

ORA-27369: job of type EXECUTABLE failed with exit code: No such file or directory

ORA-27369: job of type EXECUTABLE failed with exit code: 255 execve: Exec format error
STANDARD_ERROR="execve: Exec format error"

3. Check shell header : /usr/bin/ksh or /usr/bin/sh , If below error:

a. try 1st with #!/usr/bin/ksh
b. if still same error then try #!/usr/bin/sh

STANDARD_ERROR="bash: expdp: command not found
